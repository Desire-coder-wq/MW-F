doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width,initial-scale=1")
    title MWF - Sales Entry
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css")
    link(rel="stylesheet", href="/css/attendant-manage.css")
    style.
      .product-option {
        display: flex;
        justify-content: space-between;
        padding: 8px 12px;
      }
      .product-name {
        font-weight: bold;
      }
      .product-stock {
        color: #666;
        font-size: 0.9em;
      }
      .stock-available {
        color: green;
      }
      .stock-low {
        color: orange;
        font-weight: bold;
      }
      .stock-out {
        color: red;
        font-weight: bold;
      }
      .stock-info {
        margin-top: 5px;
        font-size: 0.85em;
        padding: 5px;
        border-radius: 3px;
        background: #f8f9fa;
      }
      .quantity-error {
        color: red;
        font-size: 0.8em;
        display: none;
      }
      .btn-back {
        display: inline-block;
        background-color: #28a745; /* green */
        color: white;
        padding: 8px 16px;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 600;
        margin-top: 10px;
        transition: background 0.3s;
      }
      .btn-back:hover {
        background-color: #218838;
      }

  body
    .layout
      aside.sidebar
        .logo-container
          img.logo-img(src="/images/logo 2.png", alt="MWF Logo")
          .logo-text Mayondo Wood & Furniture
        nav
          ul
            li
              a(href="/sales-entry", class="active")
                i.fas.fa-cash-register
                span Sales Entry
            li
              a(href="/receipt")
                i.fas.fa-receipt
                span Receipt
            li
              a(href="/sales-report")
                i.fas.fa-chart-bar
                span Sales Report
            li
              a(href="/sales-list")
                i.fas.fa-list
                span Sales List
            li
              a(href="/stockList")
                i.fas.fa-boxes
                span Stock List
            li
              a(href="/logout")
                i.fas.fa-sign-out-alt
                span Logout

      #topbar
        .header-content
          .company-info
            h1 Sales Entry
            h3 Record new sales transactions
          .header-actions
            .notification-btn
              i.fas.fa-bell
              .notification-count 0
            .user-profile
              i.fas.fa-user-circle
              span #{user ? user.name : 'User'}

      .container
        .form-section
          .form-container
            .form-header
              h3
                i.fas.fa-cash-register
                | Sales Entry Form
              p Fill in the details below to record a new sale

            form(action="/sales", method="POST", id="salesForm")
              fieldset.form-fieldset
                legend.fieldset-legend(style="color:green")
                  i.fas.fa-user
                  | Customer Information
                .form-grid
                  .form-group
                    label(for="customerName") Full Name:
                    input#customerName(type="text", name="customerName", required)
                  .form-group
                    label(for="customerPhone") Phone Number:
                    input#customerPhone(type="text", name="customerPhone", placeholder="+2567...", required)
                  .form-group
                    label(for="customerEmail") Email Address:
                    input#customerEmail(type="email", name="customerEmail", placeholder="customer@email.com")
                  .form-group
                    label(for="customerAddress") Address:
                    input#customerAddress(type="text", name="customerAddress", placeholder="Town / Area")

              fieldset.form-fieldset
                legend.fieldset-legend(style="color:green")
                  i.fas.fa-cube
                  | Product Information
                .form-grid
                  .form-group
                    label(for="productName") Product Name:
                    select#productName(name="productName", required)
                      option(value="", disabled selected) -- Loading Products --
                    .stock-info(id="stockInfo")
                  .form-group
                    label(for="productType") Product Type:
                    input#productType(type="text", name="productType", readonly, style="background-color: #f8f9fa;")
                  .form-group
                    label(for="quantity") Quantity:
                    input#quantity(type="number", name="quantity", min="1", required)
                    .quantity-error(id="quantityError")
                  .form-group
                    label(for="price") Price per Unit (UGX):
                    input#price(type="number", name="price", min="0", required)
                  .form-group
                    label(for="date") Date of Sale:
                    input#date(type="date", name="date", required)

              fieldset.form-fieldset
                legend.fieldset-legend(style="color:green")
                  i.fas.fa-credit-card
                  | Payment Information
                .form-grid
                  .form-group
                    label(for="paymentType") Payment Method:
                    select#paymentType(name="paymentType", required)
                      option(value="Cash") Cash
                      option(value="Cheque") Cheque
                      option(value="Bank Overdraft") Bank Overdraft
                  .form-group
                    label(for="transport") Transport Required? (adds 5% to total):
                    select#transport(name="transport", required)
                      option(value="no") No
                      option(value="yes") Yes

              fieldset.form-fieldset
                legend.fieldset-legend(style="color:green")
                  i.fas.fa-sticky-note
                  | Additional Notes
                .form-group
                  textarea#notes(name="notes", rows="3", placeholder="Any remarks...")

              .form-actions
                button.submit-btn(type="submit", id="submitBtn")
                  i.fas.fa-save
                  | Record Sale
                a.btn-back(href="/attendant-dashboard")
                  | ‚Üê Back to Dashboard

    script.
      document.addEventListener('DOMContentLoaded', function() {
        const productSelect = document.getElementById('productName');
        const productTypeInput = document.getElementById('productType');
        const priceInput = document.getElementById('price');
        const quantityInput = document.getElementById('quantity');
        const stockInfoDiv = document.getElementById('stockInfo');
        const quantityErrorDiv = document.getElementById('quantityError');
        const submitBtn = document.getElementById('submitBtn');
        const salesForm = document.getElementById('salesForm');

        let products = [];

        async function loadProducts() {
          try {
            productSelect.innerHTML = '<option value="" disabled selected>Loading products...</option>';
            const response = await fetch('/api/products-with-stock');
            products = await response.json();

            if (products.length === 0) {
              productSelect.innerHTML = '<option value="" disabled selected>No products available</option>';
              return;
            }

            productSelect.innerHTML = '<option value="" disabled selected>-- Select Product --</option>';

            products.forEach(product => {
              const option = document.createElement('option');
              option.value = product.productName;
              option.setAttribute('data-product-type', product.productType);
              option.setAttribute('data-selling-price', product.sellingPrice);
              option.setAttribute('data-stock-quantity', product.quantity);

              let stockClass = 'stock-available';
              if (product.quantity === 0) {
                stockClass = 'stock-out';
              } else if (product.quantity < 10) {
                stockClass = 'stock-low';
              }

              option.innerHTML = `
                <div class="product-option">
                  <span class="product-name">${product.productName}</span>
                  <span class="product-stock ${stockClass}">Stock: ${product.quantity}</span>
                </div>
              `;
              
              productSelect.appendChild(option);
            });

          } catch (error) {
            console.error('Error loading products:', error);
            productSelect.innerHTML = '<option value="" disabled selected>Error loading products</option>';
          }
        }

        productSelect.addEventListener('change', function() {
          const selectedOption = this.options[this.selectedIndex];
          const productType = selectedOption.getAttribute('data-product-type');
          const sellingPrice = selectedOption.getAttribute('data-selling-price');
          const stockQuantity = parseInt(selectedOption.getAttribute('data-stock-quantity'));

          productTypeInput.value = productType || '';
          priceInput.value = sellingPrice || '';

          updateStockInfo(stockQuantity);
          quantityInput.value = '';
          quantityErrorDiv.style.display = 'none';
          quantityErrorDiv.textContent = '';
        });

        quantityInput.addEventListener('input', function() {
          const selectedOption = productSelect.options[productSelect.selectedIndex];
          const stockQuantity = parseInt(selectedOption.getAttribute('data-stock-quantity'));
          const enteredQuantity = parseInt(this.value) || 0;

          if (enteredQuantity > stockQuantity) {
            quantityErrorDiv.style.display = 'block';
            quantityErrorDiv.textContent = `Only ${stockQuantity} units available in stock!`;
            submitBtn.disabled = true;
          } else if (enteredQuantity <= 0) {
            quantityErrorDiv.style.display = 'block';
            quantityErrorDiv.textContent = 'Quantity must be at least 1';
            submitBtn.disabled = true;
          } else {
            quantityErrorDiv.style.display = 'none';
            quantityErrorDiv.textContent = '';
            submitBtn.disabled = false;
          }
        });

        function updateStockInfo(stockQuantity) {
          if (stockQuantity === 0) {
            stockInfoDiv.innerHTML = '<span style="color: red;">‚ùå Out of Stock</span>';
            quantityInput.disabled = true;
            submitBtn.disabled = true;
          } else if (stockQuantity < 10) {
            stockInfoDiv.innerHTML = `<span style="color: orange;">‚ö†Ô∏è Low Stock: ${stockQuantity} units available</span>`;
            quantityInput.disabled = false;
            submitBtn.disabled = false;
          } else {
            stockInfoDiv.innerHTML = `<span style="color: green;">‚úÖ In Stock: ${stockQuantity} units available</span>`;
            quantityInput.disabled = false;
            submitBtn.disabled = false;
          }
        }

        salesForm.addEventListener('submit', function(e) {
          const selectedOption = productSelect.options[productSelect.selectedIndex];
          const stockQuantity = parseInt(selectedOption.getAttribute('data-stock-quantity'));
          const enteredQuantity = parseInt(quantityInput.value) || 0;

          if (enteredQuantity > stockQuantity) {
            e.preventDefault();
            alert(`Cannot proceed! You are trying to sell ${enteredQuantity} units but only ${stockQuantity} are available in stock.`);
            return false;
          }
        });

        const today = new Date().toISOString().split('T')[0];
        document.getElementById('date').value = today;

        loadProducts();
      });

    footer
      .container
        p &copy; 2025 Mayondo Wood & Furniture Ltd 
        p Designed by A Rose Desire @ Groundbreaker Talents
