doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title My Tasks - MWF
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css")
    link(rel="stylesheet", href="/css/attendant-manage.css")
    style.
      .table-section {
        background: white;
        border-radius: 10px;
        padding: 20px;
        margin: 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }
      .table-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f0f0f0;
      }
      .table-header h3 {
        color: #2c5aa0;
        margin: 0;
      }
      .table-container {
        overflow-x: auto;
      }
      .tasks-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
      }
      .tasks-table th {
        background: #2c5aa0;
        color: white;
        padding: 12px 15px;
        text-align: left;
        font-weight: 600;
      }
      .tasks-table td {
        padding: 12px 15px;
        border-bottom: 1px solid #e0e0e0;
      }
      .tasks-table tr:hover {
        background: #f8f9fa;
      }
      .status-pending {
        background: #fff3cd;
        color: #856404;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
      }
      .status-in-progress {
        background: #cce7ff;
        color: #004085;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
      }
      .status-completed {
        background: #d4edda;
        color: #155724;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
      }
      .priority-high {
        color: #dc3545;
        font-weight: bold;
      }
      .priority-medium {
        color: #ffc107;
        font-weight: bold;
      }
      .priority-low {
        color: #28a745;
        font-weight: bold;
      }
      .btn-action {
        background: #2c5aa0;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 6px;
      }
      .btn-action:hover {
        background: #1e3d6f;
        transform: translateY(-2px);
      }
      .btn-action:disabled {
        background: #6c757d;
        cursor: not-allowed;
        transform: none;
      }
      .btn-action.start {
        background: #28a745;
      }
      .btn-action.start:hover {
        background: #218838;
      }
      .btn-action.complete {
        background: #17a2b8;
      }
      .btn-action.complete:hover {
        background: #138496;
      }
      .no-data {
        text-align: center;
        padding: 40px;
        color: #666;
      }
      .no-data i {
        font-size: 48px;
        margin-bottom: 15px;
        color: #ddd;
      }
      .loading {
        opacity: 0.6;
        pointer-events: none;
      }
      .success-message {
        background: #d4edda;
        color: #155724;
        padding: 12px;
        border-radius: 6px;
        margin-bottom: 20px;
        border: 1px solid #c3e6cb;
        display: none;
      }
      .error-message {
        background: #f8d7da;
        color: #721c24;
        padding: 12px;
        border-radius: 6px;
        margin-bottom: 20px;
        border: 1px solid #f5c6cb;
        display: none;
      }

  body
    .layout
      //- Sidebar
      aside.sidebar
        .logo-container
          img.logo-img(src="/images/logo 2.png", alt="MWF Logo")
          .logo-text Mayondo Wood & Furniture
        nav
          ul
            li
              a(href="/sales")
                i.fas.fa-cash-register
                span Record Sale
            li
              a(href="/sales-list")
                i.fas.fa-list-alt
                span Sales List
            li
              a(href="/attendant/add-stock")
                i.fas.fa-boxes
                span Add / Update Stock
            li
              a(href="/stockList")
                i.fas.fa-clipboard-list
                span Stock Inventory
            li
              a(href="/sales-summary")
                i.fas.fa-chart-bar
                span Sales Summary
            li
              a(href="/attendant/tasks", class="active")
                i.fas.fa-tasks
                span My Tasks
            li
              a(href="/loading/offload")
                i.fas.fa-truck-loading
                span Offload Materials
            li
              a(href="/loading/pending")
                i.fas.fa-hourglass-half
                span Pending Sales
            li
              a(href="/logout")
                i.fas.fa-sign-out-alt
                span Logout

      //- Topbar
      #topbar
        .header-content
          .company-info
            h1 My Tasks
            h3 View and manage your assigned tasks
          .header-actions
            .notification-btn
              i.fas.fa-bell
              .notification-count 0
            .user-profile
              i.fas.fa-user-circle
              span#attendantName Attendant

      //- Main Content
      .container
        //- Success and Error Messages
        .success-message#successMessage
          i.fas.fa-check-circle
          span#successText Task updated successfully!
        .error-message#errorMessage
          i.fas.fa-exclamation-circle
          span#errorText Error updating task. Please try again.

        .table-section
          .table-header
            h3
              i.fas.fa-tasks
              | My Assigned Tasks
          .table-container
            if tasks && tasks.length
              table.tasks-table
                thead
                  tr
                    th 
                      i.fas.fa-tasks
                      | Task Type
                    th 
                      i.fas.fa-align-left
                      | Description
                    th 
                      i.fas.fa-flag
                      | Priority
                    th 
                      i.fas.fa-calendar
                      | Due Date
                    th 
                      i.fas.fa-check-circle
                      | Status
                    th 
                      i.fas.fa-cog
                      | Actions
                tbody
                  each task in tasks
                    tr(id=`task-${task._id}`)
                      td= task.taskType
                      td= task.taskDescription
                      td(class=`priority-${task.priority}`)= task.priority
                      td= new Date(task.dueDate).toLocaleDateString()
                      td
                        span(id=`status-${task._id}`, class=`status-${task.status.toLowerCase().replace(' ', '-')}`)= task.status
                      td
                        if task.status === 'Pending'
                          button.btn-action.start(
                            onclick=`startTask('${task._id}')`
                            id=`btn-${task._id}`
                          )
                            i.fas.fa-play
                            | Start Task
                        else if task.status === 'In Progress'
                          button.btn-action.complete(
                            onclick=`completeTask('${task._id}')`
                            id=`btn-${task._id}`
                          )
                            i.fas.fa-check
                            | Complete Task
                        else
                          span.status-completed
                            i.fas.fa-check-circle
                            | Completed
            else
              .no-data
                i.fas.fa-clipboard-list
                p No tasks assigned yet.

    //- Footer
    footer
      .container
        p &copy; 2025 Mayondo Wood & Furniture Ltd

  script.
    // Set attendant name if available
    document.addEventListener('DOMContentLoaded', function() {
      const attendantName = '#{user ? user.name : "Attendant"}';
      document.getElementById('attendantName').textContent = attendantName;
    });

    // Function to show message
    function showMessage(type, text) {
      const messageEl = type === 'success' ? document.getElementById('successMessage') : document.getElementById('errorMessage');
      const textEl = type === 'success' ? document.getElementById('successText') : document.getElementById('errorText');
      
      textEl.textContent = text;
      messageEl.style.display = 'block';
      
      // Auto hide after 5 seconds
      setTimeout(() => {
        messageEl.style.display = 'none';
      }, 5000);
    }

    // Function to start task (set to In Progress)
    async function startTask(taskId) {
      const button = document.getElementById(`btn-${taskId}`);
      const taskRow = document.getElementById(`task-${taskId}`);
      
      // Disable button and show loading state
      button.disabled = true;
      button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Starting...';
      taskRow.classList.add('loading');

      try {
        const response = await fetch(`/attendant/tasks/${taskId}/start`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const result = await response.json();

        if (response.ok && result.success) {
          // Update the UI
          const statusElement = document.getElementById(`status-${taskId}`);
          statusElement.textContent = 'In Progress';
          statusElement.className = 'status-in-progress';
          
          // Update the button to Complete
          button.className = 'btn-action complete';
          button.innerHTML = '<i class="fas fa-check"></i> Complete Task';
          button.onclick = () => completeTask(taskId);
          
          // Show success message
          showMessage('success', 'Task started successfully!');
        } else {
          throw new Error(result.error || 'Failed to start task');
        }
        
      } catch (error) {
        console.error('Error starting task:', error);
        
        // Re-enable button
        button.disabled = false;
        button.innerHTML = '<i class="fas fa-play"></i> Start Task';
        
        // Show error message
        showMessage('error', error.message || 'Error starting task. Please try again.');
      } finally {
        taskRow.classList.remove('loading');
      }
    }

    // Function to complete task
    async function completeTask(taskId) {
      const button = document.getElementById(`btn-${taskId}`);
      const taskRow = document.getElementById(`task-${taskId}`);
      
      // Disable button and show loading state
      button.disabled = true;
      button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Completing...';
      taskRow.classList.add('loading');

      try {
        const response = await fetch(`/attendant/tasks/${taskId}/complete`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const result = await response.json();

        if (response.ok && result.success) {
          // Update the UI - replace button with completed status
          button.outerHTML = '<span class="status-completed"><i class="fas fa-check-circle"></i> Completed</span>';
          
          // Update status text
          const statusElement = document.getElementById(`status-${taskId}`);
          statusElement.textContent = 'Completed';
          statusElement.className = 'status-completed';
          
          // Show success message
          showMessage('success', 'Task completed successfully! Manager has been notified.');
        } else {
          throw new Error(result.error || 'Failed to complete task');
        }
        
      } catch (error) {
        console.error('Error completing task:', error);
        
        // Re-enable button
        button.disabled = false;
        button.innerHTML = '<i class="fas fa-check"></i> Complete Task';
        
        // Show error message
        showMessage('error', error.message || 'Error completing task. Please try again.');
      } finally {
        taskRow.classList.remove('loading');
      }
    }

    // Add event listener for Escape key to close messages
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape') {
        document.getElementById('successMessage').style.display = 'none';
        document.getElementById('errorMessage').style.display = 'none';
      }
    });

    // Allow clicking anywhere to close messages
    document.addEventListener('click', function() {
      document.getElementById('successMessage').style.display = 'none';
      document.getElementById('errorMessage').style.display = 'none';
    });