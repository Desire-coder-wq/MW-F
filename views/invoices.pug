doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title MWF — Invoices & Receipts
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css")
    link(rel="stylesheet", href="/css/attendant-manage.css")
    link(rel="stylesheet", href="/css/invoices.css")

  body
    .layout
      //- Sidebar
      aside.sidebar
        .logo-container
          img.logo-img(src="/images/logo 2.png", alt="MWF Logo")
          .logo-text Mayondo Wood & Furniture
        nav
          ul
            li
              a(href="/dashboard")
                i.fas.fa-home
                span Dashboard
            li
              a(href="/products")
                i.fas.fa-couch
                span Products Gallery
            li
              a(href="/stock")
                i.fas.fa-boxes
                span Add Stock
            li
              a(href="/stockList")
                i.fas.fa-clipboard-list
                span Stock List
            li
              a(href="/sales-report")
                i.fas.fa-chart-line
                span Sales Reports
            li
              a(href="/settings")
                i.fas.fa-cog
                span Settings
            li
              a(href="/invoices").active
                i.fas.fa-receipt
                span Invoices
            li
              a(href="/logout")
                i.fas.fa-sign-out-alt
                span Logout

      //- Main Content Area
      .main-content
        //- Topbar
        #topbar
          .header-content
            .company-info
              h1 Invoices & Receipts
              h3 Manage your sales documents
            .header-actions
              .notification-btn
                i.fas.fa-bell
                .notification-count 0
              .user-profile
                i.fas.fa-user-circle
                span#userName(data-user-name=user ? user.name : 'User')= user ? user.name : 'User'

        //- Container
        .container
          .page-header
            .header-text
              h2(style="margin-bottom: 10px; color: #1e293b;") Sales Documents
              p(style="color: #64748b;") Create and manage invoices and receipts for your customers
            .header-actions
              button.get-all-btn(onclick="generateNewInvoice()")
                i.fas.fa-plus
                | New Invoice
              button.get-all-btn(onclick="generateNewReceipt()")
                i.fas.fa-receipt
                | New Receipt
              button.get-all-btn(onclick="exportInvoices()")
                i.fas.fa-download
                | Export

          //- Statistics Cards
          .stats-cards
            .stat-card
              .stat-icon(style="background: #dcfce7; color: #166534;")
                i.fas.fa-file-invoice-dollar
              .stat-info
                h3#totalRevenue UGX #{totalRevenue.toLocaleString()}
                p Total Revenue
            .stat-card
              .stat-icon(style="background: #fef3c7; color: #92400e;")
                i.fas.fa-clock
              .stat-info
                h3#pendingInvoices #{pendingInvoices}
                p Pending Invoices
            .stat-card
              .stat-icon(style="background: #dcfce7; color: #166534;")
                i.fas.fa-check-circle
              .stat-info
                h3#paidInvoices #{paidInvoices}
                p Paid Invoices
            .stat-card
              .stat-icon(style="background: #fef3c7; color: #92400e;")
                i.fas.fa-calendar
              .stat-info
                h3#thisMonthInvoices #{thisMonthInvoices}
                p This Month

          //- Invoices List
          .cards
            each invoice in invoices
              .card.invoice-card
                .card-content
                  .invoice-header
                    .invoice-meta
                      h4= invoice.invoiceNumber
                      p.date Created: #{invoice.date}
                    .invoice-status(class=`status-${invoice.status}`)
                      span= invoice.status.charAt(0).toUpperCase() + invoice.status.slice(1)
                    .invoice-amount
                      h3 UGX #{invoice.amount.toLocaleString()}
                  .invoice-details
                    .detail-item
                      strong Customer:
                      span= invoice.customer
                    .detail-item
                      strong Items:
                      span= invoice.items
                    .detail-item
                      strong Payment Method:
                      span= invoice.paymentMethod
                  .card-actions
                    button.action-btn.view-btn(onclick=`viewInvoice('${invoice.id}')`)
                      i.fas.fa-eye
                      | View
                    button.action-btn.update-btn(onclick=`editInvoice('${invoice.id}')`)
                      i.fas.fa-edit
                      | Edit
                    button.action-btn.print-btn(onclick=`printInvoice('${invoice.id}')`)
                      i.fas.fa-print
                      | Print
                    button.action-btn.delete-btn(onclick=`deleteInvoice('${invoice.id}')`)
                      i.fas.fa-trash
                      | Delete

          //- Empty State
          if invoices.length === 0
            .empty-state
              i.fas.fa-file-invoice
              h3 No Invoices Found
              p Create your first invoice to get started
              button.get-all-btn(onclick="generateNewInvoice()")
                i.fas.fa-plus
                | Create First Invoice

        //- Footer
        footer
          .container
            p &copy; #{new Date().getFullYear()} Mayondo Wood & Furniture Ltd — All rights reserved.
            p(style="font-size: 14px; color: #64748b;") Designed by Desire

    //- New Invoice Modal
    .modal(style="display: none;")#invoiceModal
      .modal-content(style="max-width: 600px;")
        span.close(style="position: absolute; right: 15px; top: 10px; cursor: pointer;") &times;
        h3(style="margin-bottom: 20px;") Create New Invoice
        form#invoiceForm
          .form-row
            .form-group
              label Customer Name
              input(type="text", name="customerName", required, placeholder="Enter customer name")
            .form-group
              label Customer Email
              input(type="email", name="customerEmail", placeholder="Enter customer email")
          .form-row
            .form-group
              label Invoice Number
              input(type="text", name="invoiceNumber", required, placeholder="e.g., INV-001")
            .form-group
              label Due Date
              input(type="date", name="dueDate", required)
          .form-group
            label Items
            .invoice-items
              .invoice-item
                input(type="text", placeholder="Item description", name="itemDesc[]", required)
                input(type="number", placeholder="Quantity", name="itemQty[]", required, min="1")
                input(type="number", placeholder="Price", name="itemPrice[]", required, step="0.01")
                button(type="button", onclick="removeItem(this)").remove-item
                  i.fas.fa-times
            button(type="button", onclick="addItem()").get-all-btn
              i.fas.fa-plus
              | Add Item
          .form-group
            label Payment Method
            select(name="paymentMethod", required)
              option(value="") Select Payment Method
              option(value="cash") Cash
              option(value="card") Credit/Debit Card
              option(value="mobile") Mobile Money
              option(value="bank") Bank Transfer
          .form-actions
            button.get-all-btn(type="button", onclick="closeModal()") Cancel
            button.get-all-btn(type="submit", style="background: #0b880b;") Create Invoice

    //- Success Modal
    .modal(style="display: none;")#successModal
      .modal-content(style="max-width: 400px; text-align: center;")
        span.close(style="position: absolute; right: 15px; top: 10px; cursor: pointer;") &times;
        .modal-icon(style="font-size: 48px; color: #0b880b; margin-bottom: 20px;")
          i.fas.fa-check-circle
        h3(style="margin-bottom: 15px;") Success!
        p#successMessage Operation completed successfully
        button.get-all-btn(onclick="closeSuccessModal()", style="margin-top: 20px;") OK

    script.
      // Calculate statistics from invoices data
      const invoices = !{JSON.stringify(invoices)};
      const totalRevenue = invoices.reduce((sum, inv) => sum + inv.amount, 0);
      const pendingInvoices = invoices.filter(inv => inv.status === 'pending').length;
      const paidInvoices = invoices.filter(inv => inv.status === 'paid').length;
      const thisMonthInvoices = invoices.filter(inv => {
        const invoiceDate = new Date(inv.date);
        const now = new Date();
        return invoiceDate.getMonth() === now.getMonth() && invoiceDate.getFullYear() === now.getFullYear();
      }).length;

      // Update statistics in the DOM
      document.getElementById('totalRevenue').textContent = `UGX ${totalRevenue.toLocaleString()}`;
      document.getElementById('pendingInvoices').textContent = pendingInvoices;
      document.getElementById('paidInvoices').textContent = paidInvoices;
      document.getElementById('thisMonthInvoices').textContent = thisMonthInvoices;

      // Modal functions
      function openModal(modalId) {
        document.getElementById(modalId).style.display = 'block';
      }

      function closeModal() {
        document.getElementById('invoiceModal').style.display = 'none';
      }

      function closeSuccessModal() {
        document.getElementById('successModal').style.display = 'none';
      }

      // Close modals when clicking on X
      document.querySelectorAll('.modal .close').forEach(closeBtn => {
        closeBtn.onclick = function() {
          this.closest('.modal').style.display = 'none';
        };
      });

      // Close modals when clicking outside
      window.onclick = function(event) {
        if (event.target.classList.contains('modal')) {
          event.target.style.display = 'none';
        }
      };

      // Invoice item management
      function addItem() {
        const itemsContainer = document.querySelector('.invoice-items');
        const newItem = document.createElement('div');
        newItem.className = 'invoice-item';
        newItem.innerHTML = `
          <input type="text" placeholder="Item description" name="itemDesc[]" required>
          <input type="number" placeholder="Quantity" name="itemQty[]" required min="1">
          <input type="number" placeholder="Price" name="itemPrice[]" required step="0.01">
          <button type="button" onclick="removeItem(this)" class="remove-item">
            <i class="fas fa-times"></i>
          </button>
        `;
        itemsContainer.appendChild(newItem);
      }

      function removeItem(button) {
        const items = document.querySelectorAll('.invoice-item');
        if (items.length > 1) {
          button.closest('.invoice-item').remove();
        }
      }

      // Form submission
      document.getElementById('invoiceForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const formData = new FormData(this);
        const invoiceData = {
          customerName: formData.get('customerName'),
          customerEmail: formData.get('customerEmail'),
          invoiceNumber: formData.get('invoiceNumber'),
          dueDate: formData.get('dueDate'),
          items: [],
          paymentMethod: formData.get('paymentMethod')
        };

        // Collect items
        const itemDescs = formData.getAll('itemDesc[]');
        const itemQtys = formData.getAll('itemQty[]');
        const itemPrices = formData.getAll('itemPrice[]');
        
        itemDescs.forEach((desc, index) => {
          invoiceData.items.push({
            description: desc,
            quantity: parseInt(itemQtys[index]),
            price: parseFloat(itemPrices[index])
          });
        });

        // Simulate API call
        setTimeout(() => {
          closeModal();
          document.getElementById('successMessage').textContent = 'Invoice created successfully!';
          openModal('successModal');
          // In real implementation, you would redirect or refresh the page
          // window.location.href = '/invoices';
        }, 1000);
      });

      // Invoice functions
      function viewInvoice(id) {
        window.location.href = `/invoice/${id}`;
      }

      function editInvoice(id) {
        // Redirect to edit page or open edit modal
        window.location.href = `/invoice/edit/${id}`;
      }

      function printInvoice(id) {
        window.open(`/invoice/${id}?print=true`, '_blank');
      }

      function deleteInvoice(id) {
        if (confirm('Are you sure you want to delete this invoice?')) {
          // Simulate API call
          fetch(`/api/invoices/${id}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              document.getElementById('successMessage').textContent = 'Invoice deleted successfully!';
              openModal('successModal');
              // Reload the page after a short delay
              setTimeout(() => {
                window.location.reload();
              }, 2000);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Error deleting invoice');
          });
        }
      }

      function generateNewInvoice() {
        openModal('invoiceModal');
      }

      function generateNewReceipt() {
        // Redirect to receipt creation page
        window.location.href = '/receipts/new';
      }

      function exportInvoices() {
        // Simulate export functionality
        document.getElementById('successMessage').textContent = 'Invoices exported successfully!';
        openModal('successModal');
        
        // In real implementation, this would download a file
        // window.location.href = '/api/invoices/export';
      }

      // Set user name
      const userName = document.getElementById('userName').getAttribute('data-user-name');
      document.getElementById('userName').textContent = userName;