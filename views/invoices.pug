doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title MWF â€” Invoices & Receipts
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css")
    link(rel="stylesheet", href="/css/invoices.css")
    style.
      /* Reset and Base Styles */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      }

      body {
        background: linear-gradient(135deg, rgb(237, 180, 105), rgb(238, 212, 179));
        color: #333;
        min-height: 100vh;
      }

      /* Layout */
      .layout {
        display: flex;
        min-height: 100vh;
      }

      /* Sidebar */
      .sidebar {
        width: 260px;
        background: linear-gradient(135deg, rgb(5, 103, 5), rgb(232, 176, 103));
        color: #fff;
        padding: 25px 20px;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
        box-shadow: 4px 0 20px rgba(0, 0, 0, 0.15);
        z-index: 1000;
      }

      .logo-container {
        text-align: center;
        margin-bottom: 40px;
        padding-bottom: 20px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.3);
      }

      .logo-img {
        width: 70px;
        height: 70px;
        border-radius: 10px;
        margin-bottom: 12px;
        object-fit: contain;
      }

      .logo-text {
        font-size: 18px;
        font-weight: bold;
        color: white;
        line-height: 1.3;
      }

      .sidebar nav ul {
        list-style: none;
      }

      .sidebar nav ul li {
        margin-bottom: 8px;
      }

      .sidebar nav ul li a {
        color: rgba(255, 255, 255, 0.9);
        text-decoration: none;
        font-size: 15px;
        display: flex;
        align-items: center;
        padding: 14px 16px;
        border-radius: 10px;
        transition: all 0.3s ease;
        gap: 14px;
      }

      .sidebar nav ul li a:hover {
        background: rgba(255, 255, 255, 0.15);
        color: #fff;
        transform: translateX(5px);
      }

      .sidebar nav ul li a.active {
        background: rgba(255, 255, 255, 0.2);
        color: #fff;
        font-weight: 600;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      }

      .sidebar nav ul li a i {
        width: 22px;
        text-align: center;
        font-size: 16px;
      }

      /* Main Content */
      .main-content {
        flex: 1;
        margin-left: 260px;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }

      /* Topbar */
      #topbar {
        background: linear-gradient(135deg, rgb(5, 103, 5), rgb(232, 176, 103));
        padding: 0 40px;
        height: 90px;
        display: flex;
        align-items: center;
        box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
        position: sticky;
        top: 0;
        z-index: 100;
      }

      .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      }

      .company-info h1 {
        font-size: 26px;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 4px;
      }

      .company-info h3 {
        font-size: 16px;
       color: #1e293b;
        font-weight: 500;
      }

      .header-actions {
        display: flex;
        align-items: center;
        gap: 20px;
      }

      .notification-btn {
        position: relative;
        color: white;
        font-size: 20px;
        cursor: pointer;
      }

      .notification-count {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #e74c3c;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        font-size: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
      }

      .user-profile {
        display: flex;
        align-items: center;
        gap: 12px;
        color: white;
        font-weight: 500;
      }

      .user-profile i {
        font-size: 28px;
      }

      /* Container */
      .container {
        flex: 1;
        padding: 40px;
        max-width: 1400px;
        margin: 0 auto;
        width: 100%;
      }

      /* Page Header */
      .page-header {
        background: white;
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
        border-left: 5px solid #0b880b;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .header-text h2 {
        color: #1e293b;
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 8px;
      }

      .header-text p {
        color: #64748b;
        font-size: 16px;
      }

      .header-actions {
        display: flex;
        gap: 12px;
        flex-wrap: wrap;
      }

      .get-all-btn {
        background: linear-gradient(135deg, #0b880b, #0a6e0a);
        color: white;
        border: none;
        border-radius: 12px;
        padding: 14px 22px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
        box-shadow: 0 4px 15px rgba(11, 136, 11, 0.3);
      }

      .get-all-btn:hover {
        background: linear-gradient(135deg, #0a6e0a, #095909);
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(11, 136, 11, 0.4);
      }

      /* Statistics Cards */
      .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
      }

      .stat-card {
        background: white;
        padding: 30px;
        border-radius: 20px;
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
        display: flex;
        align-items: center;
        gap: 20px;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, 0.5);
      }

      .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 5px;
        background: linear-gradient(135deg, rgb(11, 136, 11), rgb(232, 176, 103));
      }

      .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 35px rgba(0, 0, 0, 0.15);
      }

      .stat-icon {
        width: 70px;
        height: 70px;
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        flex-shrink: 0;
      }

      .stat-info h3 {
        color: #1e293b;
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 5px;
      }

      .stat-info p {
        color: #64748b;
        font-size: 14px;
        font-weight: 500;
      }

      /* Invoice Cards */
      .cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
        gap: 30px;
        margin-bottom: 50px;
      }

      .invoice-card {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.5);
        position: relative;
        overflow: hidden;
      }

      .invoice-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 5px;
        background: linear-gradient(135deg, rgb(11, 136, 11), rgb(232, 176, 103));
      }

      .invoice-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
      }

      .card-content {
        height: 100%;
        display: flex;
        flex-direction: column;
      }

      .invoice-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 20px;
        padding-bottom: 20px;
        border-bottom: 1px solid #e2e8f0;
      }

      .invoice-meta h4 {
        color: #1e293b;
        font-size: 20px;
        font-weight: 700;
        margin-bottom: 6px;
      }

      .invoice-meta .date {
        color: #64748b;
        font-size: 14px;
      }

      .invoice-status {
        padding: 8px 16px;
        border-radius: 25px;
        font-size: 12px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .status-paid {
        background: #dcfce7;
        color: #166534;
      }

      .status-pending {
        background: #fef3c7;
        color: #92400e;
      }

      .status-overdue {
        background: #fee2e2;
        color: #991b1b;
      }

      .invoice-amount h3 {
        color: #0b880b;
        font-size: 24px;
        font-weight: 700;
        margin: 0;
      }

      .invoice-details {
        margin: 20px 0;
        flex: 1;
      }

      .detail-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 12px;
        padding: 10px 0;
        border-bottom: 1px solid #f1f5f9;
      }

      .detail-item:last-child {
        border-bottom: none;
      }

      .detail-item strong {
        color: #374151;
        font-weight: 600;
        font-size: 14px;
      }

      .detail-item span {
        color: #64748b;
        font-size: 14px;
        text-align: right;
      }

      .card-actions {
        display: flex;
        gap: 10px;
        margin-top: auto;
        flex-wrap: wrap;
      }

      .action-btn {
        display: flex;
        align-items: center;
        gap: 6px;
        padding: 10px 16px;
        border: none;
        border-radius: 10px;
        font-size: 13px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        flex: 1;
        justify-content: center;
      }

      .view-btn {
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        color: white;
      }

      .update-btn {
        background: linear-gradient(135deg, #0b880b, #0a6e0a);
        color: white;
      }

      .print-btn {
        background: linear-gradient(135deg, #8b5cf6, #7c3aed);
        color: white;
      }

      .delete-btn {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
      }

      .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      }

      /* Empty State */
      .empty-state {
        background: white;
        border-radius: 20px;
        padding: 80px 40px;
        text-align: center;
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
        border: 2px dashed #e2e8f0;
      }

      .empty-state i {
        font-size: 80px;
        color: #cbd5e1;
        margin-bottom: 25px;
      }

      .empty-state h3 {
        color: #475569;
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 15px;
      }

      .empty-state p {
        color: #64748b;
        font-size: 16px;
        margin-bottom: 30px;
      }

      /* Footer */
      footer {
        background: linear-gradient(135deg, rgb(11, 136, 11), rgb(232, 176, 103));
        color: white;
        text-align: center;
        padding:  10px;
      }

      footer .container {
        margin: 0 auto;
        padding: 0;
      }

      footer p {
        margin: 4px 0;
      }

      footer p:last-child {
        font-size: 14px;
        color: rgba(255, 255, 255, 0.8);
      }

      /* Modal Styles - UPDATED POSITION */
      .modal {
        display: none;
        position: fixed;
        z-index: 2000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        backdrop-filter: blur(5px);
        overflow-y: auto;
        padding: 20px 0;
      }

      .modal-content {
        background-color: #fff;
        margin: 40px auto;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        position: relative;
        animation: modalAppear 0.3s ease-out;
        max-width: 600px;
        width: 90%;
        transform: translateY(-20px);
      }

      @keyframes modalAppear {
        from {
          opacity: 0;
          transform: translateY(-50px) scale(0.9);
        }
        to {
          opacity: 1;
          transform: translateY(-20px) scale(1);
        }
      }

      .modal .close {
        color: #64748b;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        transition: color 0.3s ease;
        position: absolute;
        right: 20px;
        top: 15px;
        z-index: 1;
      }

      .modal .close:hover {
        color: #1e293b;
      }

      /* Form Styles */
      .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 25px;
      }

      .form-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
      }

      .form-group label {
        font-size: 14px;
        color: #374151;
        font-weight: 600;
      }

      .form-group input,
      .form-group select {
        padding: 14px 16px;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: #fff;
        width: 100%;
      }

      .form-group input:focus,
      .form-group select:focus {
        outline: none;
        border-color: #0b880b;
        box-shadow: 0 0 0 3px rgba(11, 136, 11, 0.1);
      }

      .invoice-items {
        margin-bottom: 20px;
      }

      .invoice-item {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr auto;
        gap: 12px;
        margin-bottom: 12px;
        align-items: center;
      }

      .remove-item {
        background: #ef4444;
        color: white;
        border: none;
        border-radius: 8px;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .remove-item:hover {
        background: #dc2626;
        transform: scale(1.1);
      }

      .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 15px;
        padding-top: 25px;
        border-top: 1px solid #e2e8f0;
        margin-top: 25px;
      }

      /* Success Modal */
      #successModal .modal-content {
        max-width: 400px;
        text-align: center;
        padding: 40px 30px;
      }

      .modal-icon {
        font-size: 60px;
        color: #0b880b;
        margin-bottom: 20px;
      }

      /* Create Invoice Form Section - NEW */
      .create-invoice-section {
        background: white;
        border-radius: 20px;
        padding: 0;
        margin-bottom: 40px;
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
        border-left: 5px solid #0b880b;
        overflow: hidden;
        display: none;
      }

      .section-header {
        background: linear-gradient(135deg, #0b880b, #0a6e0a);
        color: white;
        padding: 20px 30px;
        display: flex;
        justify-content: between;
        align-items: center;
      }

      .section-header h3 {
        font-size: 20px;
        font-weight: 600;
        margin: 0;
      }

      .close-section {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .close-section:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: rotate(90deg);
      }

      .section-content {
        padding: 30px;
      }

      /* Responsive Design */
      @media (max-width: 1200px) {
        .cards {
          grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }
      }

      @media (max-width: 1024px) {
        .sidebar {
          width: 80px;
          padding: 20px 15px;
        }

        .logo-text,
        .sidebar nav ul li a span {
          display: none;
        }

        .logo-img {
          width: 50px;
          height: 50px;
        }

        .sidebar nav ul li a {
          justify-content: center;
          padding: 16px;
        }

        .sidebar nav ul li a i {
          margin-right: 0;
          font-size: 18px;
        }

        .main-content {
          margin-left: 80px;
        }

        footer {
          margin-left: 80px;
        }
      }

      @media (max-width: 768px) {
        .container {
          padding: 30px 20px;
        }

        .page-header {
          flex-direction: column;
          align-items: flex-start;
          gap: 20px;
          padding: 25px;
        }

        .header-actions {
          width: 100%;
          justify-content: flex-start;
        }

        .stats-cards {
          grid-template-columns: 1fr;
        }

        .cards {
          grid-template-columns: 1fr;
          gap: 20px;
        }

        .invoice-header {
          flex-direction: column;
          gap: 15px;
        }

        .form-row {
          grid-template-columns: 1fr;
        }

        .invoice-item {
          grid-template-columns: 1fr;
          gap: 10px;
        }

        .card-actions {
          flex-direction: column;
        }

        .action-btn {
          width: 100%;
        }

        #topbar {
          padding: 0 20px;
          height: 80px;
        }

        .company-info h1 {
          font-size: 22px;
        }

        .modal-content {
          margin: 20px auto;
          transform: translateY(-10px);
        }
      }

      @media (max-width: 480px) {
        .sidebar {
          transform: translateX(-100%);
        }

        .main-content {
          margin-left: 0;
        }

        footer {
          margin-left: 0;
        }

        .container {
          padding: 20px 15px;
        }

        .stat-card {
          padding: 25px 20px;
          flex-direction: column;
          text-align: center;
        }

        .stat-icon {
          margin-bottom: 15px;
        }

        .empty-state {
          padding: 60px 20px;
        }

        .section-content {
          padding: 20px 15px;
        }

        .modal-content {
          margin: 10px auto;
          width: 95%;
        }
      }
  body
    .layout
      //- Sidebar
      aside.sidebar
        .logo-container
          img.logo-img(src="/images/logo 2.png", alt="MWF Logo")
          .logo-text Mayondo Wood & Furniture
        nav
          ul
            li
              a(href="/manager-dashboard")
                i.fas.fa-home
                span Dashboard
            li
              a(href="/products")
                i.fas.fa-couch
                span Products Gallery
            li
              a(href="/stock")
                i.fas.fa-boxes
                span Add Stock
            li
              a(href="/stockList")
                i.fas.fa-clipboard-list
                span Stock List
            li
              a(href="/sales-report")
                i.fas.fa-chart-line
                span Sales Reports
            li
              a(href="/settings")
                i.fas.fa-cog
                span Settings
            li
              a(href="/invoices").active
                i.fas.fa-receipt
                span Invoices
            li
              a(href="/logout")
                i.fas.fa-sign-out-alt
                span Logout

      //- Main Content Area
      .main-content
        //- Topbar
        #topbar
          .header-content
            .company-info
              h1 Invoices & Receipts
              h3 Manage your sales documents
            .header-actions
              .notification-btn
                i.fas.fa-bell
                .notification-count 0
              .user-profile
                i.fas.fa-user-circle
                span#userName(data-user-name=user ? user.name : 'User')= user ? user.name : 'User'

        //- Container
        .container
          .page-header
            .header-text
              h2 Sales Documents
              p Create and manage invoices and receipts for your customers
            .header-actions
              button.get-all-btn(onclick="showCreateInvoiceForm()")
                i.fas.fa-plus
                | Create New Invoice
              button.get-all-btn(onclick="exportToPDF()")
                i.fas.fa-download
                | Export to PDF
              button.get-all-btn(onclick="goToManagerDashboard()")
                i.fas.fa-arrow-left
                | Back to Dashboard

          //- Create Invoice Form Section
          .create-invoice-section#createInvoiceSection
            .section-header
              h3 Create New Invoice
              button.close-section(onclick="hideCreateInvoiceForm()")
                i.fas.fa-times
            .section-content
              form#invoiceForm
                .form-row
                  .form-group
                    label Customer Name
                    input(type="text", name="customerName", required, placeholder="Enter customer name")
                  .form-group
                    label Customer Email
                    input(type="email", name="customerEmail", placeholder="Enter customer email")
                .form-row
                  .form-group
                    label Invoice Number
                    input(type="text", name="invoiceNumber", required, placeholder="e.g., INV-001")
                  .form-group
                    label Due Date
                    input(type="date", name="dueDate", required)
                .form-group
                  label Items
                  .invoice-items
                    .invoice-item
                      input(type="text", placeholder="Item description", name="itemDesc[]", required)
                      input(type="number", placeholder="Quantity", name="itemQty[]", required, min="1")
                      input(type="number", placeholder="Price", name="itemPrice[]", required, step="0.01")
                      button.remove-item(type="button", onclick="removeItem(this)")
                        i.fas.fa-times
                  button.get-all-btn(type="button", onclick="addItem()", style="margin-top: 15px;")
                    i.fas.fa-plus
                    | Add Item
                .form-group
                  label Payment Method
                  select(name="paymentMethod", required)
                    option(value="") Select Payment Method
                    option(value="cash") Cash
                    option(value="card") Credit/Debit Card
                    option(value="mobile") Mobile Money
                    option(value="bank") Bank Transfer
                .form-actions
                  button.get-all-btn(type="button", onclick="hideCreateInvoiceForm()") Cancel
                  button.get-all-btn(type="submit", style="background: #0b880b;") Create Invoice

          //- Statistics Cards
          .stats-cards
            .stat-card
              .stat-icon(style="background: #dcfce7; color: #166534;")
                i.fas.fa-file-invoice-dollar
              .stat-info
                h3#totalRevenue UGX #{totalRevenue.toLocaleString()}
                p Total Revenue
            .stat-card
              .stat-icon(style="background: #fef3c7; color: #92400e;")
                i.fas.fa-clock
              .stat-info
                h3#pendingInvoices #{pendingInvoices}
                p Pending Invoices
            .stat-card
              .stat-icon(style="background: #dcfce7; color: #166534;")
                i.fas.fa-check-circle
              .stat-info
                h3#paidInvoices #{paidInvoices}
                p Paid Invoices
            .stat-card
              .stat-icon(style="background: #fef3c7; color: #92400e;")
                i.fas.fa-calendar
              .stat-info
                h3#thisMonthInvoices #{thisMonthInvoices}
                p This Month

          //- Invoices List
          .cards
            each invoice in invoices
              .card.invoice-card
                .card-content
                  .invoice-header
                    .invoice-meta
                      h4= invoice.invoiceNumber
                      p.date Created: #{invoice.date}
                    .invoice-status(class=`status-${invoice.status}`)
                      span= invoice.status.charAt(0).toUpperCase() + invoice.status.slice(1)
                    .invoice-amount
                      h3 UGX #{invoice.amount.toLocaleString()}
                  .invoice-details
                    .detail-item
                      strong Customer:
                      span= invoice.customer
                    .detail-item
                      strong Items:
                      span= invoice.items
                    .detail-item
                      strong Payment Method:
                      span= invoice.paymentMethod
                  .card-actions
                    button.action-btn.view-btn(onclick=`viewInvoice('${invoice.id}')`)
                      i.fas.fa-eye
                      | View
                    button.action-btn.update-btn(onclick=`editInvoice('${invoice.id}')`)
                      i.fas.fa-edit
                      | Edit
                    button.action-btn.print-btn(onclick=`printInvoice('${invoice.id}')`)
                      i.fas.fa-print
                      | Print
                    button.action-btn.delete-btn(onclick=`deleteInvoice('${invoice.id}')`)
                      i.fas.fa-trash
                      | Delete

          //- Empty State
          if invoices.length === 0
            .empty-state
              i.fas.fa-file-invoice
              h3 No Invoices Found
              p Create your first invoice to get started
              button.get-all-btn(onclick="showCreateInvoiceForm()")
                i.fas.fa-plus
                | Create First Invoice

        //- Footer
        footer
          .container
            p &copy; #{new Date().getFullYear()} Mayondo Wood & Furniture Ltd â€” All rights reserved.
            p Designed by Desire

    //- Success Modal
    .modal(style="display: none;")#successModal
      .modal-content(style="padding: 40px 30px;")
        span.close &times;
        .modal-icon
          i.fas.fa-check-circle
        h3(style="margin-bottom: 15px;") Success!
        p#successMessage Operation completed successfully
        button.get-all-btn(onclick="closeSuccessModal()", style="background: #0b880b; margin-top: 20px;") OK

    //- Include jsPDF library for PDF export
    script(src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js")

    script.
      // Your JavaScript with updated form positioning
      const invoices = !{JSON.stringify(invoices)};
      const totalRevenue = invoices.reduce((sum, inv) => sum + inv.amount, 0);
      const pendingInvoices = invoices.filter(inv => inv.status === 'pending').length;
      const paidInvoices = invoices.filter(inv => inv.status === 'paid').length;
      const thisMonthInvoices = invoices.filter(inv => {
        const invoiceDate = new Date(inv.date);
        const now = new Date();
        return invoiceDate.getMonth() === now.getMonth() && invoiceDate.getFullYear() === now.getFullYear();
      }).length;

      document.getElementById('totalRevenue').textContent = `UGX ${totalRevenue.toLocaleString()}`;
      document.getElementById('pendingInvoices').textContent = pendingInvoices;
      document.getElementById('paidInvoices').textContent = paidInvoices;
      document.getElementById('thisMonthInvoices').textContent = thisMonthInvoices;

      // Show/hide create invoice form
      function showCreateInvoiceForm() {
        document.getElementById('createInvoiceSection').style.display = 'block';
        // Scroll to the form section
        document.getElementById('createInvoiceSection').scrollIntoView({ 
          behavior: 'smooth',
          block: 'start'
        });
      }

      function hideCreateInvoiceForm() {
        document.getElementById('createInvoiceSection').style.display = 'none';
      }

      function openModal(modalId) {
        document.getElementById(modalId).style.display = 'block';
      }

      function closeSuccessModal() {
        document.getElementById('successModal').style.display = 'none';
      }

      document.querySelectorAll('.modal .close').forEach(closeBtn => {
        closeBtn.onclick = function() {
          this.closest('.modal').style.display = 'none';
        };
      });

      window.onclick = function(event) {
        if (event.target.classList.contains('modal')) {
          event.target.style.display = 'none';
        }
      };

      function addItem() {
        const itemsContainer = document.querySelector('.invoice-items');
        const newItem = document.createElement('div');
        newItem.className = 'invoice-item';
        newItem.innerHTML = `
          <input type="text" placeholder="Item description" name="itemDesc[]" required>
          <input type="number" placeholder="Quantity" name="itemQty[]" required min="1">
          <input type="number" placeholder="Price" name="itemPrice[]" required step="0.01">
          <button type="button" onclick="removeItem(this)" class="remove-item">
            <i class="fas fa-times"></i>
          </button>
        `;
        itemsContainer.appendChild(newItem);
      }

      function removeItem(button) {
        const items = document.querySelectorAll('.invoice-item');
        if (items.length > 1) {
          button.closest('.invoice-item').remove();
        }
      }

      document.getElementById('invoiceForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const formData = new FormData(this);
        const invoiceData = {
          customerName: formData.get('customerName'),
          customerEmail: formData.get('customerEmail'),
          invoiceNumber: formData.get('invoiceNumber'),
          dueDate: formData.get('dueDate'),
          items: [],
          paymentMethod: formData.get('paymentMethod')
        };

        const itemDescs = formData.getAll('itemDesc[]');
        const itemQtys = formData.getAll('itemQty[]');
        const itemPrices = formData.getAll('itemPrice[]');
        
        itemDescs.forEach((desc, index) => {
          invoiceData.items.push({
            description: desc,
            quantity: parseInt(itemQtys[index]),
            price: parseFloat(itemPrices[index])
          });
        });

        // Submit the form data to the server
        fetch('/api/invoices', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(invoiceData)
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            hideCreateInvoiceForm();
            document.getElementById('successMessage').textContent = 'Invoice created successfully!';
            openModal('successModal');
            setTimeout(() => { window.location.reload(); }, 2000);
          } else {
            alert('Error creating invoice: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error creating invoice');
        });
      });

      function viewInvoice(id) {
        window.location.href = `/invoice/${id}`;
      }

      function editInvoice(id) {
        window.location.href = `/invoice/edit/${id}`;
      }

      function printInvoice(id) {
        window.open(`/invoice/${id}?print=true`, '_blank');
      }

      function deleteInvoice(id) {
        if (confirm('Are you sure you want to delete this invoice?')) {
          fetch(`/api/invoices/${id}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              document.getElementById('successMessage').textContent = 'Invoice deleted successfully!';
              openModal('successModal');
              setTimeout(() => { window.location.reload(); }, 2000);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Error deleting invoice');
          });
        }
      }

      function exportToPDF() {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();
        
        // Add header
        doc.setFontSize(20);
        doc.setTextColor(11, 136, 11);
        doc.text('MAYONDO WOOD & FURNITURE', 105, 20, { align: 'center' });
        
        doc.setFontSize(16);
        doc.setTextColor(0, 0, 0);
        doc.text('INVOICES REPORT', 105, 30, { align: 'center' });
        
        doc.setFontSize(10);
        doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 105, 40, { align: 'center' });
        
        // Prepare table data
        const tableData = invoices.map(invoice => [
          invoice.invoiceNumber,
          invoice.customer,
          `UGX ${invoice.amount.toLocaleString()}`,
          invoice.status.charAt(0).toUpperCase() + invoice.status.slice(1),
          invoice.date
        ]);
        
        // Add table
        doc.autoTable({
          startY: 50,
          head: [['Invoice #', 'Customer', 'Amount', 'Status', 'Date']],
          body: tableData,
          theme: 'grid',
          styles: { fontSize: 9 },
          headStyles: { fillColor: [11, 136, 11] }
        });
        
        // Add summary
        const finalY = doc.lastAutoTable.finalY + 10;
        doc.setFontSize(12);
        doc.text(`Total Revenue: UGX ${totalRevenue.toLocaleString()}`, 14, finalY);
        doc.text(`Pending Invoices: ${pendingInvoices}`, 14, finalY + 7);
        doc.text(`Paid Invoices: ${paidInvoices}`, 14, finalY + 14);
        doc.text(`This Month: ${thisMonthInvoices}`, 14, finalY + 21);
        
        // Save the PDF
        doc.save(`MWF_Invoices_${new Date().toISOString().split('T')[0]}.pdf`);
        
        document.getElementById('successMessage').textContent = 'Invoices exported to PDF successfully!';
        openModal('successModal');
      }

      function goToManagerDashboard() {
        window.location.href = '/manager-dashboard';
      }

      const userName = document.getElementById('userName').getAttribute('data-user-name');
      document.getElementById('userName').textContent = userName;